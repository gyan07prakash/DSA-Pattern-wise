class Solution {
public:
    long long speed(vector <int> piles, int mid){
        long long s=0;
        for(int i=0; i<piles.size(); i++){
            s+= (piles[i] + mid - 1) / mid;
        }
        return s;
    }
    int minEatingSpeed(vector<int>& piles, int h) {
        int maxPile = *max_element(piles.begin(), piles.end());
        int low=1, high=maxPile;
        while(low<=high){
            int mid=low+(high-low)/2;
            if(speed(piles, mid)<=h){
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return low;
    }
};
