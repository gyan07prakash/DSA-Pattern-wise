 int DayReq(vector<int>& weights, int capacity) {
        int days = 1;
        int currentLoad = 0;

        for (int i = 0; i < weights.size(); ++i) {
            if (currentLoad + weights[i] > capacity) {
             days++;
             currentLoad = 0;
            }
        currentLoad += weights[i];
        }
        return days;
    }

    int shipWithinDays(vector<int>& weights, int days) {
        int minVal = *max_element(weights.begin(), weights.end());

        int maxVal = accumulate(weights.begin(), weights.end(), 0);

        while (minVal <= maxVal) {
            int mid = minVal + (maxVal - minVal) / 2;
            int dayNumber = DayReq(weights, mid);

            if (dayNumber <= days) {
                maxVal = mid - 1; 
            } else {
                minVal = mid + 1; 
            }
        }

        return minVal;
    }
